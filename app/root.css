*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:root {
  /* light theme: */
  --bgColorQuestionTitle: #bdf;
  --bgColorQuestionAnswer: #eff;
  --bgColorCopied: #fed;
  --colorText: #222;
  --colorTitle: #666;
  --colorTitleHighlight: #d86;
  --colorQuestionTitle: #333;
  --borderColor: #ddd;
  --bgColorHighlight: #c0d3e4;
  --bgColorTableRows: #e8f7fe;
  --colorLink: #79f;
  --colorLinkVisited: #8ac;

  /* same in both themes: */
  --colorButtonText: #c97;
  --paddingSides: clamp(8px, 2vw, 16px);

  /* dark theme at the end of file to overwrite all previous rules */
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
}
@keyframes grow {
  from {
    max-height: 0;
  }
}
@keyframes slideFromRight {
  from {
    transform: translateX(10vw);
  }
}

html {
  height: 100%;
  overflow-y: scroll;
}

body {
  height: 100%;
  width: 100%;
  max-width: 1000px;
  margin: auto;
  padding: 0 var(--paddingSides);
  color: var(--colorText);
  display: flex;
  flex-direction: column;
  font-family: 'Open Sans', Arial, sans-serif;
  line-height: 1.5;
}

a,
.link {
  color: var(--colorLink);
  text-decoration: none;
  cursor: pointer;
}

a:visited {
  color: var(--colorLinkVisited);
}

button:hover.icon-link,
a:hover,
.link:hover {
  text-decoration: underline;
  cursor: pointer;
}

header {
  display: flex;
  align-items: flex-start;
  padding: 24px 0 48px;
  color: var(--colorTitle);
}

header.fun-logo {
  background-image: url('/assets/coded-banner.svg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: top center;
  background-size: 800px;
}

.fun-logo .logo {
  height: clamp(100px, 20vw, 150px);
  width: auto;
  padding: clamp(1rem, 5vw, 2rem) 24px 0 16px;
}

.min-logo .logo {
  height: clamp(50px, 15vw, 100px);
  width: auto;
  padding: clamp(1rem, 5vw, 2rem) 12px 0 0;
}

.intro {
  margin: min(23px, 3.5vw) 0 10px;
  font-size: clamp(1rem, 2vw, 1.2rem);
}

.logo-intro-group {
  width: 100%;
  display: flex;
  flex-direction: row;
}

.intro a,
.intro a:visited {
  color: var(--colorButtonText);
}

h1 {
  color: var(--colorTitle);
  margin: 4px 0 10px -2px; /* visually align */
  font-size: clamp(1rem, 4.5vw, 2.5rem);
  font-weight: 600;
  line-height: 1;
}

.highlight {
  font-family: 'Courier New', Courier, monospace;
  color: var(--colorTitleHighlight);
}

.icon-link-group {
  align-self: flex-end;
  padding: 0 0 10px 30px;
  flex: 0;
  display: flex;
  align-items: center;
  gap: 16px;
  transition: opacity 1s;
}

.fun-logo .icon-link-group {
  flex-direction: column;
}

.min-logo .icon-link-group {
  flex-direction: row;
}

.icon-link,
button.icon-link,
a:visited.icon-link {
  font-size: 0.6rem;
  text-transform: uppercase;
  white-space: nowrap;
  color: inherit;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

svg {
  width: 24px;
  height: 24px;
}

.icon-link-group svg {
  width: 32px;
  height: 32px;
}

svg * {
  transition: fill 300ms;
}

.icon-link:not(:hover) svg *:not(.image-core),
.searchbar input + svg circle {
  fill: transparent !important;
}

.icon-link:active {
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

.share::after {
  content: 'Link copied to clipboard';
  text-transform: none;
  background: var(--bgColorCopied);
  color: black;
  padding: 4px 6px;
  border-radius: 2px;
  position: absolute;
  pointer-events: none;
  opacity: 0;
  transform: translate(0, -3.2em);
}

.share.copied::after {
  opacity: 1;
  transform: translate(0, 3.2em);
}

@media (prefers-reduced-motion: no-preference) {
  .share::after {
    transition: opacity 2s, transform 0s 2s;
    will-change: opacity, transform;
  }

  .share.copied::after {
    transition: opacity 200ms, transform 200ms;
  }
}

main {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

article {
  background-color: var(--bgColorQuestionAnswer);
  border-radius: 2px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

article > h2 {
  padding: 9px var(--paddingSides) 10px;
  background-color: var(--bgColorQuestionTitle);
  color: var(--colorQuestionTitle);
  font-size: clamp(1rem, 2vw, 1.2rem);
  font-weight: 400;
  line-height: 1.2;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 2px;
}

article > h2 > .transparent-button {
  padding-right: var(--paddingSides);
  display: flex;
  gap: 8px;
}

article > h2 > .transparent-button svg {
  transition: opacity 100ms;
}

article > h2:not(:hover) > .transparent-button svg {
  opacity: 0;
}

article > h2::after {
  content: url('/assets/chevron-right.svg');
  width: 12px;
  height: 12px;
  flex: none;
  transform: translateY(-3px);
}

article:not(.link-hovered) > h2:hover::after {
  transform: rotate(20deg);
}

article.expanded h2::after {
  transform: translateY(3px) rotate(90deg);
}

article.expanded:not(.link-hovered) h2:hover::after {
  transform: translateY(3px) rotate(60deg);
}

.transparent-button {
  /* all: unset; removes outline which wasn't good for accessibility */
  background: none;
  border: none;
  color: inherit;
  font: inherit;
  text-align: inherit;
  padding: 0;
  cursor: inherit;
  user-select: inherit;
}

.answer {
  padding: 0 var(--paddingSides);
}

.answer p,
.answer .card-shortdesc,
.answer .card-longdesc,
.answer .card-hide-longdesc {
  margin: var(--paddingSides) 0;
}

.answer table {
  border-collapse: collapse;
}

.answer table th {
  text-align: left;
  padding: 4px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  text-decoration: none;
  background-color: var(--bgColorHighlight);
  border: 1px solid var(--bgColorQuestionTitle);
}

.answer table td {
  padding: 4px;
  vertical-align: top;
  border: 1px solid var(--bgColorQuestionTitle);
}

tr:nth-child(even) {
  background-color: var(--bgColorTableRows);
}

.answer table p {
  margin: 0;
}

.answer ul,
.answer ol {
  margin: var(--paddingSides);
}

.answer blockquote {
  padding-left: 16px;
  font-style: italic;
}

.answer.long .card-shortdesc,
.answer.long .card-show-longdesc,
.answer.short .card-longdesc,
.answer.short .card-hide-longdesc {
  display: none;
}

.actions {
  display: flex;
  justify-content: flex-end;
  margin: 16px;
  gap: 16px;
}

article.related {
  /* do NOT change here, change global --paddingSides if needed,
   * must be synchronized to avoid changing width on transition,
   * because changing width reflows text, which looks janky on opening the related question */
  margin-left: calc(2 * var(--paddingSides));
  max-height: 999px;
  will-change: margin-left;

  /* keep even for reduced motion */
  animation: fadeIn 400ms ease-out;
  animation-fill-mode: both;
}

@media (prefers-reduced-motion: no-preference) {
  .react-auto-height {
    overflow: hidden;
    transition: height 400ms;
    will-change: height;
  }

  .answer {
    transition: margin 400ms;
  }

  article {
    transition: margin 400ms;
  }

  article > h2 > .transparent-button {
    transition: padding 400ms;
  }

  article > h2::after {
    transition: transform 400ms;
  }

  article.related {
    /* prettier-ignore */
    animation: grow 400ms cubic-bezier(1, 0, 1, 0),
               fadeIn 400ms 400ms ease-out,
               slideFromRight 400ms 400ms ease-out;
    animation-fill-mode: both;
  }
}

article.related > h2 > .transparent-button,
article.related .answer {
  margin-right: calc(-2 * var(--paddingSides));
  will-change: margin-right;
}

footer {
  --space: 12px;
  align-self: center;
  margin-top: auto;
  padding: 100px var(--space) var(--space);
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: var(--space);
  font-size: 0.8rem;
  line-height: 1;
}

footer a,
footer a:visited {
  color: var(--colorButtonText);
}

footer > *:not(:last-child) {
  border-right: 1px solid #999;
  padding-right: var(--space);
}

.searchbar {
  display: flex;
  justify-content: stretch;
  align-items: center;
  position: relative;
}

.searchbar input {
  flex: 1;
  font-size: 1rem;
  padding: 10px;
  border: none;
  outline: 1px solid var(--borderColor);
  border-radius: 4px;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
}

.searchbar input::-webkit-search-cancel-button {
  margin-right: 35px;
}

.searchbar svg {
  position: absolute;
  right: 11px; /* visually aligned to the chevron */
}

.dropdown div {
  color: var(--colorText);
  background-color: var(--bgColorQuestionAnswer);
  overflow: auto;
  border: 1px solid var(--borderColor);
  z-index: 1;
}

.dropdown.hidden {
  display: none;
}

.result-item {
  line-height: 1;
  cursor: pointer;
  color: currentColor;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  width: 100%;
}

.result-item:hover {
  background-color: var(--bgColorHighlight);
}

.result-item.already-open {
  color: #999;
  cursor: default;
  background-color: transparent;
}

.result-item.none-of-the-above,
.result-item.none-of-the-above:visited {
  text-decoration: none;
  color: inherit;
  font-style: italic;
}

input:focus-visible,
button:focus-visible,
a:focus-visible,
.link:focus-visible {
  outline: 2px solid #bbb;
  border-radius: 2px;
}

@media (max-width: 740px) {
  body {
    /* overflow to avoid horizontal scrollbar when sliding related questions,
     * which was shifting vertical scroll on mobile */
    overflow-x: hidden;
  }
  header {
    flex-direction: column;
    padding: 12px 0 12px;
  }

  .intro {
    line-height: 1.2;
  }

  .logo-intro-group {
    width: 100%;
  }

  .fun-logo .icon-link-group,
  .min-logo .icon-link-group {
    width: 100%;
    padding: 16px;
    align-self: flex-start;
    flex-direction: row;
    justify-content: center;
  }

  footer {
    font-size: 0.75rem;
  }

  footer > *:not(:last-child) {
    border-right: 0;
    padding-right: 0;
  }
}

/* dark theme */
@media (prefers-color-scheme: dark) {
  :root {
    --bgColorQuestionTitle: #30386e;
    --bgColorQuestionAnswer: #171f29;
    --bgColorCopied: #fed;
    --colorText: #f7fff9;
    --colorTitle: #f7fff9;
    --colorTitleHighlight: #d86;
    --colorQuestionTitle: #ccc;
    --borderColor: #444;
    --bgColorHighlight: #354652;
    --bgColorTableRows: #1d2436;
    --colorLink: #89e3ff;
    --colorLinkVisited: #79f;
  }

  article > h2::after {
    filter: invert(1);
  }

  .icon-link:active {
    filter: drop-shadow(0 4px 8px rgba(255, 255, 255, 0.2));
  }
}
/* do not add more rules below, add them above dark theme */
